install.packages("ggpubr")
.path.package()
path.package()
install.packages(c('repr', 'IRdisplay', 'evaluate', 'crayon', 'pbdZMQ', 'devtools', 'uuid', 'digest'))
devtools::install_github('IRkernel/IRkernel')
IRkernel::installspec()
IRkernel::installspec()
R.version
.libPaths()
file.edit("~/.Renviron")
.libPaths()
library(blogdown)
install.packages("blogdown")
install.packages("blogdown")
install.packages("blogdown")
install.packages("blogdown")
install.packages("blogdown")
install.packages("blogdown")
Sys.Date()
Sys.time()
format(Sys.time(), "%a %b %d %X %Y")
Sys.time()
knitr::knit(input = "~/blog/source/_rmd/template.Rmd", "~/blog/source/_posts/")
knitr::knit(input = "~/blog/source/_rmd/template.Rmd")
getwd()
knitr::knit(input = "~/blog/source/_rmd/template.Rmd")
format(Sys.time(), '%d %B, %Y')
knitr::knit(input = "~/blog/source/_rmd/template.Rmd")
knitr::knit(input = "~/blog/source/_rmd/template.Rmd")
knitr::knit(input = "~/blog/source/_rmd/template.Rmd")
knitr::knit(input = "~/blog/source/_rmd/template.Rmd", "~/blog/source/_rmd/")
knitr::knit(input = "~/blog/source/_rmd/template.Rmd", "~/blog/source/_rmd")
knitr::knit(input = "~/blog/source/_rmd/template.Rmd", "~/blog/source/_rmd/template.md")
knitr::knit(input = "~/blog/source/_rmd/template.Rmd", "~/blog/source/_rmd/template.md")
knitr::knit(input = "~/blog/source/_rmd/template.Rmd", "~/blog/source/_rmd/template.md")
Sys.time()
Sys.Date()
# a R function used to create a new post for Hexo blog system.
new_post <- function(post_name=NULL,template_path=getwd(), post_path=getwd(),
template_name="template.Rmd"){
if(is.null(post_name)){
stop("A post name must be given!")
}
input_file   <- paste(template_path,template_name,"/")
current_time <- Sys.Date()
out_file     <- paste(current_time,post_name,"-")
knitr::knit(input = input_file, output = out_file)
print("New post creat successfully!")
}
new_post("test")
new_post("test.md")
# a R function used to create a new post for Hexo blog system.
new_post <- function(post_name=NULL,template_path=getwd(), post_path=getwd(),
template_name="template.Rmd"){
if(is.null(post_name)){
stop("A post name must be given!")
}
input_file   <- paste(template_path,template_name,"/")
current_time <- Sys.Date()
out_file     <- paste0(current_time, "-",post_name,".md")
knitr::knit(input = input_file, output = out_file)
print("New post creat successfully!")
}
new_post("test")
debug(new_post)
new_post("test")
undebug(new_post)
new_post("test")
# a R function used to create a new post for Hexo blog system.
new_post <- function(post_name=NULL,template_path=getwd(), post_path=getwd(),
template_name="template.Rmd"){
if(is.null(post_name)){
stop("A post name must be given!")
}
input_file   <- paste(template_path,template_name, sep="/")
current_time <- Sys.Date()
out_file     <- paste0(current_time, "-",post_name,".md")
knitr::knit(input = input_file, output = out_file)
print("New post creat successfully!")
}
new_post("test")
debug(new_post)
new_post("test")
undebug(new_post)
setwd("~/blog/source/_rmd")
new_post("test")
new_post("test")
Sys.time()
Sys.time()[1]
Sys.time()[2]
Sys.time()
gsub(pattern = "^([0-9]*[0-9]) [A-Z]*$", "\\1", Sys.time())
source('~/blog/source/_rmd/new_post.R')
new_post("test")
ls
ls()
source("./new_post.R")
new_rmd_post("how-to-write-rmd-documents-in-hexo-system")
grep(pattern = "(.*)\.[Rr]md", "\\1", "2018-02-05-hwofdsfdsfdsf-fef-fds.Rmd")
grep(pattern = "(.*)\\.[Rr]md", "\\1", "2018-02-05-hwofdsfdsfdsf-fef-fds.Rmd")
grep(pattern = "^(.*)\\.[Rr]md$", "\\1", "2018-02-05-hwofdsfdsfdsf-fef-fds.Rmd")
grep(pattern = "^([A-Za-z0-9-]*)\\.[Rr]md$", "\\1", "2018-02-05-hwofdsfdsfdsf-fef-fds.Rmd")
grep(pattern = "^([A-Za-z0-9-]*)[Rr]md$", "\\1", "2018-02-05-hwofdsfdsfdsf-fef-fds.Rmd")
grep(pattern = "^(.*)\\.[Rr]md$", "\\1", x="2018-02-05-hwofdsfdsfdsf-fef-fds.Rmd")
grep(pattern = "^(.*)\\.[Rr]md$", "\\1", x = "2018-02-05-hwofdsfdsfdsf-fef-fds.Rmd")
grep(pattern = "^(.*)[Rr]md$", "\\1", x = "2018-02-05-hwofdsfdsfdsf-fef-fds.Rmd")
grep(pattern = "^(.*)\\.[Rr]md$", "\\1", x = "2018-02-05-hwofdsfdsfdsf-fef-fds.Rmd")
grep(pattern = "^(.*)\\.[Rr]md$", "\\1", x = "2018-02-05-hwofdsfdsfdsf-fef-fds.Rmd", perl = T)
grep(pattern = "^(.*)\\.[Rr]md$", "\\1", x = "2018-02-05-hwofdsfdsfdsf-fef-fds.Rmd", value = T)
gsub(pattern = "^(.*)\\.[Rr]md$", "\\1", x = "2018-02-05-hwofdsfdsfdsf-fef-fds.Rmd", value = T)
gsub(pattern = "^(.*)\\.[Rr]md$", "\\1", x = "2018-02-05-hwofdsfdsfdsf-fef-fds.Rmd")
# R functions used to create a new post for Hexo blog system.
new_md_post <- function(post_name=NULL,template_name="template.Rmd",template_path=getwd(),
post_path=getwd(),time_tag=TRUE){
if(is.null(post_name)){
post_name <- gsub(pattern = "^(.*)\\.[Rr]md$", "\\1", x = template_name)
}
input_file   <- paste(template_path,template_name, sep="/")
# retrieve system date
if(time_tag){
current_time <- Sys.Date()
out_file     <- paste0(current_time, "-",post_name,".md")
}else{
out_file     <- paste0(post_name,".md")
}
knitr::knit(input = input_file, output = out_file)
print("New markdown post creat successfully!")
}
new_md_post(template_name = "2018-02-05-how-to-write-rmd-documents-in-hexo-system.Rmd")
new_md_post(template_name = "2018-02-05-how-to-write-rmd-documents-in-hexo-system.Rmd", post_path = "../_posts/")
# R functions used to create a new post for Hexo blog system.
new_md_post <- function(post_name=NULL,template_name="template.Rmd",template_path=getwd(),
post_path=getwd(),time_tag=FALSE){
if(is.null(post_name)){
post_name <- gsub(pattern = "^(.*)\\.[Rr]md$", "\\1", x = template_name)
}
input_file   <- paste(template_path,template_name, sep="/")
# retrieve system date
if(time_tag){
current_time <- Sys.Date()
out_file     <- paste0(current_time, "-",post_name,".md")
}else{
out_file     <- paste0(post_name,".md")
}
knitr::knit(input = input_file, output = out_file)
print("New markdown post creat successfully!")
}
new_md_post(template_name = "2018-02-05-how-to-write-rmd-documents-in-hexo-system.Rmd", post_path = "../_posts")
# R functions used to create a new post for Hexo blog system.
new_md_post <- function(post_name=NULL,template_name="template.Rmd",template_path=getwd(),
post_path=getwd(),time_tag=FALSE){
if(is.null(post_name)){
post_name <- gsub(pattern = "^(.*)\\.[Rr]md$", "\\1", x = template_name)
}
input_file   <- paste(template_path,template_name, sep="/")
# retrieve system date
if(time_tag){
current_time <- Sys.Date()
out_file     <- paste0(post_path, "/", current_time, "-",post_name,".md")
}else{
out_file     <- paste0(post_path, "/", post_name,".md")
}
knitr::knit(input = input_file, output = out_file)
print("New markdown post creat successfully!")
}
new_md_post(template_name = "2018-02-05-how-to-write-rmd-documents-in-hexo-system.Rmd", post_path = "../_posts")
new_md_post(template_name = "2018-02-05-how-to-write-rmd-documents-in-hexo-system.Rmd", post_path = "../_posts")
new_md_post(template_name = "2018-02-05-how-to-write-rmd-documents-in-hexo-system.Rmd", post_path = "../_posts")
getwd()
new_rmd_post("how-to-do-group-survival-analysis")
library(knitr)
opts_template
opts_template()
opts_template
opts_chunk$set
opts_chunk
opts_chunk$get()
library(knitr)
opts_chunk$set(message=FALSE, warning=FALSE, eval=TRUE, echo=TRUE, cache=TRUE, fig.path="../images")
options(digits=3)
options(max.print=200)
#.ex <- 1 # Track ex numbers w/ hidden var. Increment each ex: `r .ex``r .ex=.ex+1`
load("~/Desktop/ggct_survival_data_on_metastasis_and_stages.Rdata")
View(ggct_on_metastasis)
df <- ggct_on_metastasis[, c(1,2,5,6)]
View(df)
load("~/Desktop/ggct_survival_data_on_metastasis_and_stages.Rdata")
df <- ggct_on_metastasis[, c(1,2,5,6)]
source("~/Desktop/groupSurvival.R")
source("~/Desktop/groupSurvival.R")
args(groupSurvival)
source("~/Desktop/groupSurvival.R")
args(groupSurvival)
args(plot_surv)
head(df)
res <- groupSurvival(df=df, event="OS_IND", time="OS", var="expression",method="median")
plot_surv(df)
plot_surv(res$data)
base_dir
opts_chunk$get()
plot_surv(res$data, cutoff = 3000)
res <- groupSurvival(df=df, event="OS_IND", time="OS", var="expression",method="percent", percent = 0.1)
plot_surv(res$data, cutoff = 3000)
library(knitr)
opts_chunk$set(message=FALSE, warning=FALSE, eval=TRUE, echo=TRUE, cache=TRUE, fig.path="../images")
options(digits=3)
options(max.print=200)
#.ex <- 1 # Track ex numbers w/ hidden var. Increment each ex: `r .ex``r .ex=.ex+1`
load("~/Desktop/ggct_survival_data_on_metastasis_and_stages.Rdata")
df <- ggct_on_metastasis[, c(1,2,5,6)]
head(df)
source("~/Desktop/groupSurvival.R")
args(groupSurvival)
args(plot_surv)
res <- groupSurvival(df=df, event="OS_IND", time="OS", var="expression",method="median")
plot_surv(res$data)
plot_surv(res$data, cutoff = 3000)
res <- groupSurvival(df=df, event="OS_IND", time="OS", var="expression",method="percent", percent = 0.1)
plot_surv(res$data, cutoff = 3000)
library(knitr)
opts_chunk$set(message=FALSE, warning=FALSE, eval=TRUE, echo=TRUE, cache=TRUE, fig.path="./images")
options(digits=3)
options(max.print=200)
#.ex <- 1 # Track ex numbers w/ hidden var. Increment each ex: `r .ex``r .ex=.ex+1`
load("~/Desktop/ggct_survival_data_on_metastasis_and_stages.Rdata")
df <- ggct_on_metastasis[, c(1,2,5,6)]
head(df)
source("~/Desktop/groupSurvival.R")
args(groupSurvival)
args(plot_surv)
res <- groupSurvival(df=df, event="OS_IND", time="OS", var="expression",method="median")
plot_surv(res$data)
plot_surv(res$data, cutoff = 3000)
res <- groupSurvival(df=df, event="OS_IND", time="OS", var="expression",method="percent", percent = 0.1)
plot_surv(res$data, cutoff = 3000)
getwd()
new_md_post("2018-02-07-how-to-do-group-survival-analysis.Rmd")
library(knitr)
opts_chunk$set(message=FALSE, warning=FALSE, eval=TRUE, echo=TRUE, cache=TRUE, fig.path="../images")
options(digits=3)
options(max.print=200)
#.ex <- 1 # Track ex numbers w/ hidden var. Increment each ex: `r .ex``r .ex=.ex+1`
load("~/Desktop/ggct_survival_data_on_metastasis_and_stages.Rdata")
df <- ggct_on_metastasis[, c(1,2,5,6)]
head(df)
source("~/Desktop/groupSurvival.R")
args(groupSurvival)
args(plot_surv)
res <- groupSurvival(df=df, event="OS_IND", time="OS", var="expression",method="median")
plot_surv(res$data)
plot_surv(res$data, cutoff = 3000)
res <- groupSurvival(df=df, event="OS_IND", time="OS", var="expression",method="percent", percent = 0.1)
plot_surv(res$data, cutoff = 3000)
# R functions used to create a new post for Hexo blog system.
new_md_post <- function(template_name="template.Rmd",post_name=NULL,template_path=getwd(),
post_path="../_posts",time_tag=FALSE){
if(is.null(post_name)){
post_name <- gsub(pattern = "^(.*)\\.[Rr]md$", "\\1", x = template_name)
}
input_file   <- paste(template_path,template_name, sep="/")
# retrieve system date
if(time_tag){
current_time <- Sys.Date()
out_file     <- paste0(post_path, "/", current_time, "-",post_name,".md")
}else{
out_file     <- paste0(post_path, "/", post_name,".md")
}
knitr::knit(input = input_file, output = out_file)
print("New markdown post creat successfully!")
}
new_md_post("2018-02-07-how-to-do-group-survival-analysis.Rmd")
library(knitr)
opts_chunk$set(message=FALSE, warning=FALSE, eval=TRUE, echo=TRUE, cache=TRUE, fig.path="../images/")
options(digits=3)
options(max.print=200)
#.ex <- 1 # Track ex numbers w/ hidden var. Increment each ex: `r .ex``r .ex=.ex+1`
load("~/Desktop/ggct_survival_data_on_metastasis_and_stages.Rdata")
df <- ggct_on_metastasis[, c(1,2,5,6)]
head(df)
source("~/Desktop/groupSurvival.R")
args(groupSurvival)
args(plot_surv)
res <- groupSurvival(df=df, event="OS_IND", time="OS", var="expression",method="median")
plot_surv(res$data)
plot_surv(res$data, cutoff = 3000)
res <- groupSurvival(df=df, event="OS_IND", time="OS", var="expression",method="percent", percent = 0.1)
plot_surv(res$data, cutoff = 3000)
new_md_post("2018-02-07-how-to-do-group-survival-analysis.Rmd")
new_md_post("2018-02-07-how-to-do-group-survival-analysis.Rmd")
temp <- list(c(3, 7, 9, 6, -1), c(6, 9, 12, 13, 5), c(4, 8, 3, -1, -3
), c(1, 4, 7, 2, -2), c(5, 7, 9, 4, 2), c(-3, 5, 8, 9, 4), c(3,
6, 9, 4, 1))
# Definition of the basics() function
basics <- function(x) {
c(min = min(x), mean = mean(x), median = median(x), max = max(x))
}
lapply(temp, basics)
sapply(temp, basics)
vapply(temp, basics, numeric(4))
vapply(temp, basics, numeric(3))
args(vapply)
